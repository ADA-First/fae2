# Generated by Django 2.2.7 on 2019-12-18 16:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_any_account_types', models.BooleanField(default=False)),
                ('subscription_start', models.DateField(blank=True, null=True)),
                ('subscription_end', models.DateField(blank=True, null=True)),
                ('subscription_payments', models.IntegerField(default=0)),
                ('subscription_daily_rate', models.IntegerField(default=0)),
                ('subscription_status', models.CharField(choices=[('FREE', 'Free'), ('CURRENT', 'Current'), ('EXPIRED', 'Expired'), ('SPECIAL', 'Special')], default='FREE', max_length=8)),
                ('subscription_days', models.IntegerField(default=0)),
                ('top_level_domain', models.CharField(blank=True, max_length=8, null=True)),
                ('domain', models.CharField(blank=True, max_length=64, null=True)),
                ('org', models.CharField(blank=True, max_length=128)),
                ('dept', models.CharField(blank=True, max_length=128)),
                ('email_announcements', models.BooleanField(default=True)),
                ('timezone', timezone_field.fields.TimeZoneField(default='America/Chicago')),
                ('account_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_profiles', to='accounts.AccountType')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionalProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, default='', max_length=64)),
                ('contact1_name', models.CharField(blank=True, default='', max_length=32)),
                ('contact1_title', models.CharField(blank=True, default='', max_length=32)),
                ('contact1_email', models.EmailField(blank=True, default='', max_length=64)),
                ('contact1_phone', models.CharField(blank=True, default='', max_length=16)),
                ('contact2_name', models.CharField(blank=True, default='', max_length=32)),
                ('contact2_title', models.CharField(blank=True, default='', max_length=32)),
                ('contact2_email', models.EmailField(blank=True, default='', max_length=64)),
                ('contact2_phone', models.CharField(blank=True, default='', max_length=16)),
                ('top_level_domain', models.CharField(blank=True, default='', max_length=8)),
                ('domain', models.CharField(blank=True, default='', max_length=64)),
                ('alt_domain', models.CharField(blank=True, default='', max_length=64)),
                ('authentication', models.CharField(blank=True, default='', max_length=64)),
                ('subscription_status', models.CharField(choices=[('FREE', 'Free'), ('CURRENT', 'Current'), ('EXPIRED', 'Expired'), ('SPECIAL', 'Special')], default='FREE', max_length=8)),
                ('subscription_days', models.IntegerField(default=0)),
                ('subscription_start', models.DateField(blank=True, null=True)),
                ('subscription_end', models.DateField(blank=True, null=True)),
                ('subscription_payment', models.IntegerField(default=0)),
                ('last_payment', models.IntegerField(default=0)),
                ('account_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institional_subscriptions', to='accounts.AccountType')),
                ('users', models.ManyToManyField(blank=True, default=None, related_name='institional_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Institutional Profile',
                'verbose_name_plural': 'Institutional Profiles',
                'ordering': ['account_type'],
            },
        ),
    ]
